/*
box-sizing позволяет изменить этот алгоритм, чтобы свойства width и height задавали размеры не содержимого, а размеры блока
border-box - Свойства width и height включают в себя значения padding и border, но не margin
*/
html {
	box-sizing: border-box;
}


*,
*::before,
*::after{
	box-sizing: inherit; /*inherit - указывает, что свойство наследуется от родителя*/
}


/* указываем наиболее частые стили для всего внутри body*/
body {
	min-width: ;
	margin: ;
	background-color: #f9f9f9;
	font-family: "", "Arial", sans-serif;
	font-size: 14px;
	line-height: ;
	color: #000000;
}

body.modal-active {
	overflow: hidden; /*отображается только область внутри блочного элемента,
	 остальное скрываем, если сождержимое выходит за его рамки */
}

img {
	max-width: 100%; /* устанавливанем максимальную длину у img */
}

a {
	text-decoration: none; /* убираем стили ссылок по умолчанию */
	color: inherit; /* цвет текст анаследуем у родительского элемента */
}


/* используем стиль в том случае если контент нужно спрятать, но его наличие обязательно*/
.visually-hidden {
	position: absolute !important;
	clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
	clip: rect(1px, 1px, 1px, 1px);
	padding:0 !important;
	border:0 !important;
	height: 1px !important; 
	width: 1px !important; 
	overflow: hidden;
}

/*используем для предотварщения "всплывания" элементов с float'aми */
.clearfix::after {
	content: "";
	display: table;
	clear: both;
}
/*ограничиваем блок с контентом*/
.container {
	width: 1000px; /* */
	margin: 0 auto; /* */
}

/*убираем стили списка и отступы*/
ul {
	padding-left: 0; /* */
	list-style: none; /* */
}

.left {
	float: left;
}

.right {
	float: right;
}